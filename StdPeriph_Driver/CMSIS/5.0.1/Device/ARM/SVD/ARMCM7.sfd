/*
 * ARM Limited (ARM) is supplying this software for use with Cortex-M
 * processor based microcontroller, but can be equally used for other
 * suitable processor architectures. This file can be freely distributed.
 * Modifications to this file shall be clearly marked.
 * 
 * THIS SOFTWARE IS PROVIDED "AS IS". NO WARRANTIES, WHETHER EXPRESS, IMPLIED
 * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
 * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
 * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
 *
 * @file     ARMCM7.sfd
 * @brief    CMSIS-SVD SFD File
 * @version  1.2
 * @date     07. September 2019
 * @note     Generated by SVDConv V3.3.9 on Saturday, 07.09.2019 15:17:19
 *           from File 'ARMCM7.svd',
 *           last modified on Monday, 06.02.2017 16:01:54
 */




// ---------------------------  Register Item Address: SysTick_CSR  -------------------------------
// SVD Line: 86

unsigned int SysTick_CSR __AT (0xE000E010);



// -----------------------------  Field Item: SysTick_CSR_ENABLE  ---------------------------------
// SVD Line: 94

//  <item> SFDITEM_FIELD__SysTick_CSR_ENABLE
//    <name> ENABLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0xE000E010) \nEnable SysTick Timer\n0 : 0 = disabled\n1 : 1 = enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SysTick_CSR ) </loc>
//      <o.0..0> ENABLE
//        <0=> 0: 0 = disabled
//        <1=> 1: 1 = enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SysTick_CSR_TICKINT  --------------------------------
// SVD Line: 113

//  <item> SFDITEM_FIELD__SysTick_CSR_TICKINT
//    <name> TICKINT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0xE000E010) \nGenerate Tick Interrupt\n0 : 0 = Enable SysTick Exception\n1 : 1 = Disable SysTick Exception </i>
//    <combo> 
//      <loc> ( (unsigned int) SysTick_CSR ) </loc>
//      <o.1..1> TICKINT
//        <0=> 0: 0 = Enable SysTick Exception
//        <1=> 1: 1 = Disable SysTick Exception
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: SysTick_CSR_CLKSOURCE  -------------------------------
// SVD Line: 132

//  <item> SFDITEM_FIELD__SysTick_CSR_CLKSOURCE
//    <name> CLKSOURCE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0xE000E010) \nSource to count from\n0 : 0 = External Clock\n1 : 1 = CPU Clock </i>
//    <combo> 
//      <loc> ( (unsigned int) SysTick_CSR ) </loc>
//      <o.2..2> CLKSOURCE
//        <0=> 0: 0 = External Clock
//        <1=> 1: 1 = CPU Clock
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: SysTick_CSR_COUNTFLAG  -------------------------------
// SVD Line: 151

//  <item> SFDITEM_FIELD__SysTick_CSR_COUNTFLAG
//    <name> COUNTFLAG </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0xE000E010) SysTick counted to zero </i>
//    <check> 
//      <loc> ( (unsigned int) SysTick_CSR ) </loc>
//      <o.16..16> COUNTFLAG
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SysTick_CSR  ----------------------------------
// SVD Line: 86

//  <rtree> SFDITEM_REG__SysTick_CSR
//    <name> CSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000E010) SysTick Control and Status Register </i>
//    <loc> ( (unsigned int)((SysTick_CSR >> 0) & 0xFFFFFFFF), ((SysTick_CSR = (SysTick_CSR & ~(0x10007UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x10007) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SysTick_CSR_ENABLE </item>
//    <item> SFDITEM_FIELD__SysTick_CSR_TICKINT </item>
//    <item> SFDITEM_FIELD__SysTick_CSR_CLKSOURCE </item>
//    <item> SFDITEM_FIELD__SysTick_CSR_COUNTFLAG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SysTick_RVR  -------------------------------
// SVD Line: 160

unsigned int SysTick_RVR __AT (0xE000E014);



// -----------------------------  Field Item: SysTick_RVR_RELOAD  ---------------------------------
// SVD Line: 168

//  <item> SFDITEM_FIELD__SysTick_RVR_RELOAD
//    <name> RELOAD </name>
//    <rw> 
//    <i> [Bits 23..0] RW (@ 0xE000E014) Value to auto reload SysTick after reaching zero </i>
//    <edit> 
//      <loc> ( (unsigned int)((SysTick_RVR >> 0) & 0xFFFFFF), ((SysTick_RVR = (SysTick_RVR & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SysTick_RVR  ----------------------------------
// SVD Line: 160

//  <rtree> SFDITEM_REG__SysTick_RVR
//    <name> RVR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000E014) SysTick Reload Value Register </i>
//    <loc> ( (unsigned int)((SysTick_RVR >> 0) & 0xFFFFFFFF), ((SysTick_RVR = (SysTick_RVR & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SysTick_RVR_RELOAD </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SysTick_CVR  -------------------------------
// SVD Line: 177

unsigned int SysTick_CVR __AT (0xE000E018);



// -----------------------------  Field Item: SysTick_CVR_CURRENT  --------------------------------
// SVD Line: 185

//  <item> SFDITEM_FIELD__SysTick_CVR_CURRENT
//    <name> CURRENT </name>
//    <rw> 
//    <i> [Bits 23..0] RW (@ 0xE000E018) Current value </i>
//    <edit> 
//      <loc> ( (unsigned int)((SysTick_CVR >> 0) & 0xFFFFFF), ((SysTick_CVR = (SysTick_CVR & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SysTick_CVR  ----------------------------------
// SVD Line: 177

//  <rtree> SFDITEM_REG__SysTick_CVR
//    <name> CVR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000E018) SysTick Current Value Register </i>
//    <loc> ( (unsigned int)((SysTick_CVR >> 0) & 0xFFFFFFFF), ((SysTick_CVR = (SysTick_CVR & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SysTick_CVR_CURRENT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SysTick_CALIB  ------------------------------
// SVD Line: 194

unsigned int SysTick_CALIB __AT (0xE000E01C);



// -----------------------------  Field Item: SysTick_CALIB_TENMS  --------------------------------
// SVD Line: 202

//  <item> SFDITEM_FIELD__SysTick_CALIB_TENMS
//    <name> TENMS </name>
//    <r> 
//    <i> [Bits 23..0] RO (@ 0xE000E01C) Reload value to use for 10ms timing </i>
//    <edit> 
//      <loc> ( (unsigned int)((SysTick_CALIB >> 0) & 0xFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SysTick_CALIB_SKEW  ---------------------------------
// SVD Line: 209

//  <item> SFDITEM_FIELD__SysTick_CALIB_SKEW
//    <name> SKEW </name>
//    <r> 
//    <i> [Bit 30] RO (@ 0xE000E01C) \nClock Skew\n0 : 0 = 10ms calibration value is exact\n1 : 1 = 10ms calibration value is inexact, because of the clock frequency </i>
//    <combo> 
//      <loc> ( (unsigned int) SysTick_CALIB ) </loc>
//      <o.30..30> SKEW
//        <0=> 0: 0 = 10ms calibration value is exact
//        <1=> 1: 1 = 10ms calibration value is inexact, because of the clock frequency
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SysTick_CALIB_NOREF  --------------------------------
// SVD Line: 228

//  <item> SFDITEM_FIELD__SysTick_CALIB_NOREF
//    <name> NOREF </name>
//    <r> 
//    <i> [Bit 31] RO (@ 0xE000E01C) \nNo Ref\n0 : 0 = Ref Clk available\n1 : 1 = Ref Clk not available </i>
//    <combo> 
//      <loc> ( (unsigned int) SysTick_CALIB ) </loc>
//      <o.31..31> NOREF
//        <0=> 0: 0 = Ref Clk available
//        <1=> 1: 1 = Ref Clk not available
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: SysTick_CALIB  ---------------------------------
// SVD Line: 194

//  <rtree> SFDITEM_REG__SysTick_CALIB
//    <name> CALIB </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000E01C) SysTick Calibration Value Register </i>
//    <loc> ( (unsigned int)((SysTick_CALIB >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SysTick_CALIB_TENMS </item>
//    <item> SFDITEM_FIELD__SysTick_CALIB_SKEW </item>
//    <item> SFDITEM_FIELD__SysTick_CALIB_NOREF </item>
//  </rtree>
//  


// --------------------------------  Peripheral View: SysTick  ------------------------------------
// SVD Line: 74

//  <view> SysTick
//    <name> SysTick </name>
//    <item> SFDITEM_REG__SysTick_CSR </item>
//    <item> SFDITEM_REG__SysTick_RVR </item>
//    <item> SFDITEM_REG__SysTick_CVR </item>
//    <item> SFDITEM_REG__SysTick_CALIB </item>
//  </view>
//  


// -----------------------------  Register Item Address: WDT_CSR  ---------------------------------
// SVD Line: 269

unsigned int WDT_CSR __AT (0x40001000);



// ---------------------------------  Register Item: WDT_CSR  -------------------------------------
// SVD Line: 269

//  <item> SFDITEM_REG__WDT_CSR
//    <name> CSR </name>
//    <i> [Bits 31..0] RW (@ 0x40001000) Watchdog Control and Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((WDT_CSR >> 0) & 0xFFFFFFFF), ((WDT_CSR = (WDT_CSR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: WDT  --------------------------------------
// SVD Line: 252

//  <view> WDT
//    <name> WDT </name>
//    <item> SFDITEM_REG__WDT_CSR </item>
//  </view>
//  


// -------------------------------   IRQ Num definition: ARMCM7  ----------------------------------
// SVD Line: 36



// ------------------------------------------------------------------------------------------------
// -----                              Interrupt Number Definition                             -----
// ------------------------------------------------------------------------------------------------



// ------------------------  ARM Cortex-M7 Specific Interrupt Numbers  ----------------------------

//  <qitem> Reset_IRQ
//    <name> Reset </name>
//    <i> Reset Vector, invoked on Power up and warm reset </i>
//    <loc> 1 </loc>
//  </qitem>
//  
//  <qitem> NonMaskableInt_IRQ
//    <name> NonMaskableInt </name>
//    <i> Non maskable Interrupt, cannot be stopped or preempted </i>
//    <loc> 2 </loc>
//  </qitem>
//  
//  <qitem> HardFault_IRQ
//    <name> HardFault </name>
//    <i> Hard Fault, all classes of Fault </i>
//    <loc> 3 </loc>
//  </qitem>
//  
//  <qitem> MemoryManagement_IRQ
//    <name> MemoryManagement </name>
//    <i> Memory Management, MPU mismatch, including Access Violation and No Match </i>
//    <loc> 4 </loc>
//  </qitem>
//  
//  <qitem> BusFault_IRQ
//    <name> BusFault </name>
//    <i> Bus Fault, Pre-Fetch-, Memory Access Fault, other address/memory related Fault </i>
//    <loc> 5 </loc>
//  </qitem>
//  
//  <qitem> UsageFault_IRQ
//    <name> UsageFault </name>
//    <i> Usage Fault, i.e. Undef Instruction, Illegal State Transition </i>
//    <loc> 6 </loc>
//  </qitem>
//  
//  <qitem> SVCall_IRQ
//    <name> SVCall </name>
//    <i> System Service Call via SVC instruction </i>
//    <loc> 11 </loc>
//  </qitem>
//  
//  <qitem> DebugMonitor_IRQ
//    <name> DebugMonitor </name>
//    <i> Debug Monitor </i>
//    <loc> 12 </loc>
//  </qitem>
//  
//  <qitem> PendSV_IRQ
//    <name> PendSV </name>
//    <i> Pendable request for system service </i>
//    <loc> 14 </loc>
//  </qitem>
//  
//  <qitem> SysTick_IRQ
//    <name> SysTick </name>
//    <i> System Tick Timer </i>
//    <loc> 15 </loc>
//  </qitem>
//  


// ----------------------------  ARMCM7 Specific Interrupt Numbers  -------------------------------

//  <qitem> WDT_IRQ
//    <name> WDT </name>
//    <i> WDT </i>
//    <loc> 17 </loc>
//  </qitem>
//  
//  <irqtable> ARMCM7_IRQTable
//    <name> ARMCM7 Interrupt Table </name>
//    <nvicPrioBits> 3 </nvicPrioBits>
//    <qitem> Reset_IRQ </qitem>
//    <qitem> NonMaskableInt_IRQ </qitem>
//    <qitem> HardFault_IRQ </qitem>
//    <qitem> MemoryManagement_IRQ </qitem>
//    <qitem> BusFault_IRQ </qitem>
//    <qitem> UsageFault_IRQ </qitem>
//    <qitem> SVCall_IRQ </qitem>
//    <qitem> DebugMonitor_IRQ </qitem>
//    <qitem> PendSV_IRQ </qitem>
//    <qitem> SysTick_IRQ </qitem>
//    <qitem> WDT_IRQ </qitem>
//  </irqtable>


// --------------------------------------   Menu: ARMCM7  -----------------------------------------
// SVD Line: 36



// --------------------------------  Peripheral Menu: 'ARMCM7'  -----------------------------------



// ------------------------------------------------------------------------------------------------
// -----                                       Main Menu                                      -----
// ------------------------------------------------------------------------------------------------

//  <b> SysTick
//    <m> SysTick </m>
//  </b>
//  
//  <b> WDT
//    <m> WDT </m>
//  </b>
//  
