/*
 * ARM Limited (ARM) is supplying this software for use with Cortex-M
 * processor based microcontroller, but can be equally used for other
 * suitable processor architectures. This file can be freely distributed.
 * Modifications to this file shall be clearly marked.
 * 
 * THIS SOFTWARE IS PROVIDED "AS IS". NO WARRANTIES, WHETHER EXPRESS, IMPLIED
 * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
 * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
 * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
 *
 * @file     ARMCM23.sfd
 * @brief    CMSIS-SVD SFD File
 * @version  1.0
 * @date     07. September 2019
 * @note     Generated by SVDConv V3.3.9 on Saturday, 07.09.2019 15:17:18
 *           from File 'ARMCM23.svd',
 *           last modified on Monday, 06.02.2017 16:01:54
 */




// -----------------------------  Register Item Address: SAU_CTRL  --------------------------------
// SVD Line: 120

unsigned int SAU_CTRL __AT (0xE000EDD0);



// -------------------------------  Field Item: SAU_CTRL_ENABLE  ----------------------------------
// SVD Line: 126

//  <item> SFDITEM_FIELD__SAU_CTRL_ENABLE
//    <name> ENABLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0xE000EDD0) \nEnable\n0 : Disable = SAU is disabled\n1 : Enable = SAU is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) SAU_CTRL ) </loc>
//      <o.0..0> ENABLE
//        <0=> 0: Disable = SAU is disabled
//        <1=> 1: Enable = SAU is enabled
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: SAU_CTRL_ALLNS  -----------------------------------
// SVD Line: 145

//  <item> SFDITEM_FIELD__SAU_CTRL_ALLNS
//    <name> ALLNS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0xE000EDD0) \nSecurity attribution if SAU disabled\n0 : Secure = Memory is marked as secure\n1 : Non_Secure = Memory is marked as non-secure </i>
//    <combo> 
//      <loc> ( (unsigned int) SAU_CTRL ) </loc>
//      <o.1..1> ALLNS
//        <0=> 0: Secure = Memory is marked as secure
//        <1=> 1: Non_Secure = Memory is marked as non-secure
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: SAU_CTRL  ------------------------------------
// SVD Line: 120

//  <rtree> SFDITEM_REG__SAU_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000EDD0) Control Register </i>
//    <loc> ( (unsigned int)((SAU_CTRL >> 0) & 0xFFFFFFFF), ((SAU_CTRL = (SAU_CTRL & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAU_CTRL_ENABLE </item>
//    <item> SFDITEM_FIELD__SAU_CTRL_ALLNS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SAU_TYPE  --------------------------------
// SVD Line: 166

unsigned int SAU_TYPE __AT (0xE000EDD4);



// ------------------------------  Field Item: SAU_TYPE_SREGION  ----------------------------------
// SVD Line: 173

//  <item> SFDITEM_FIELD__SAU_TYPE_SREGION
//    <name> SREGION </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0xE000EDD4) Number of implemented SAU regions </i>
//    <edit> 
//      <loc> ( (unsigned char)((SAU_TYPE >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SAU_TYPE  ------------------------------------
// SVD Line: 166

//  <rtree> SFDITEM_REG__SAU_TYPE
//    <name> TYPE </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0xE000EDD4) Type Register </i>
//    <loc> ( (unsigned int)((SAU_TYPE >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SAU_TYPE_SREGION </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SAU_RNR  ---------------------------------
// SVD Line: 182

unsigned int SAU_RNR __AT (0xE000EDD8);



// -------------------------------  Field Item: SAU_RNR_REGION  -----------------------------------
// SVD Line: 188

//  <item> SFDITEM_FIELD__SAU_RNR_REGION
//    <name> REGION </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0xE000EDD8) Currently selected SAU region </i>
//    <edit> 
//      <loc> ( (unsigned char)((SAU_RNR >> 0) & 0xFF), ((SAU_RNR = (SAU_RNR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: SAU_RNR  ------------------------------------
// SVD Line: 182

//  <rtree> SFDITEM_REG__SAU_RNR
//    <name> RNR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000EDD8) Region Number Register </i>
//    <loc> ( (unsigned int)((SAU_RNR >> 0) & 0xFFFFFFFF), ((SAU_RNR = (SAU_RNR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAU_RNR_REGION </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SAU_RBAR  --------------------------------
// SVD Line: 219

unsigned int SAU_RBAR __AT (0xE000EDDC);



// -------------------------------  Field Item: SAU_RBAR_BADDR  -----------------------------------
// SVD Line: 225

//  <item> SFDITEM_FIELD__SAU_RBAR_BADDR
//    <name> BADDR </name>
//    <rw> 
//    <i> [Bits 31..5] RW (@ 0xE000EDDC) Base Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((SAU_RBAR >> 5) & 0x7FFFFFF), ((SAU_RBAR = (SAU_RBAR & ~(0x7FFFFFFUL << 5 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFFFF) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SAU_RBAR  ------------------------------------
// SVD Line: 219

//  <rtree> SFDITEM_REG__SAU_RBAR
//    <name> RBAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000EDDC) Region Base Address Register </i>
//    <loc> ( (unsigned int)((SAU_RBAR >> 0) & 0xFFFFFFFF), ((SAU_RBAR = (SAU_RBAR & ~(0xFFFFFFE0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFE0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAU_RBAR_BADDR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SAU_RLAR  --------------------------------
// SVD Line: 234

unsigned int SAU_RLAR __AT (0xE000EDE0);



// -------------------------------  Field Item: SAU_RLAR_LADDR  -----------------------------------
// SVD Line: 240

//  <item> SFDITEM_FIELD__SAU_RLAR_LADDR
//    <name> LADDR </name>
//    <rw> 
//    <i> [Bits 31..5] RW (@ 0xE000EDE0) Limit Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((SAU_RLAR >> 5) & 0x7FFFFFF), ((SAU_RLAR = (SAU_RLAR & ~(0x7FFFFFFUL << 5 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFFFF) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SAU_RLAR_NSC  ------------------------------------
// SVD Line: 246

//  <item> SFDITEM_FIELD__SAU_RLAR_NSC
//    <name> NSC </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0xE000EDE0) Non-Secure Callable </i>
//    <check> 
//      <loc> ( (unsigned int) SAU_RLAR ) </loc>
//      <o.1..1> NSC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SAU_RLAR_ENABLE  ----------------------------------
// SVD Line: 252

//  <item> SFDITEM_FIELD__SAU_RLAR_ENABLE
//    <name> ENABLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0xE000EDE0) SAU Region enabled </i>
//    <check> 
//      <loc> ( (unsigned int) SAU_RLAR ) </loc>
//      <o.0..0> ENABLE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SAU_RLAR  ------------------------------------
// SVD Line: 234

//  <rtree> SFDITEM_REG__SAU_RLAR
//    <name> RLAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0xE000EDE0) Region Limit Address Register </i>
//    <loc> ( (unsigned int)((SAU_RLAR >> 0) & 0xFFFFFFFF), ((SAU_RLAR = (SAU_RLAR & ~(0xFFFFFFE3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFE3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAU_RLAR_LADDR </item>
//    <item> SFDITEM_FIELD__SAU_RLAR_NSC </item>
//    <item> SFDITEM_FIELD__SAU_RLAR_ENABLE </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: SAU  --------------------------------------
// SVD Line: 103

//  <view> SAU
//    <name> SAU </name>
//    <item> SFDITEM_REG__SAU_CTRL </item>
//    <item> SFDITEM_REG__SAU_TYPE </item>
//    <item> SFDITEM_REG__SAU_RNR </item>
//    <item> SFDITEM_REG__SAU_RBAR </item>
//    <item> SFDITEM_REG__SAU_RLAR </item>
//  </view>
//  


// -------------------------------------   Menu: ARMCM23  -----------------------------------------
// SVD Line: 36



// -------------------------------  Peripheral Menu: 'ARMCM23'  -----------------------------------



// ------------------------------------------------------------------------------------------------
// -----                                       Main Menu                                      -----
// ------------------------------------------------------------------------------------------------

//  <b> SAU
//    <m> SAU </m>
//  </b>
//  
